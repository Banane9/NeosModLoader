name: Test & CI Build
on:
  push:
    branches:
      - '**'
  pull_request:

env:
  NeosPath: "${{ github.workspace }}/neos_install/"

jobs:
  build:
    if: github.repository == 'neos-modding-group/NeosModLoader'
    runs-on: ubuntu-latest
    steps:
      - name: checkout NML
        uses: actions/checkout@v3
      - name: get latest Neos version
        run: |
          REMOTE_NEOS_VERSION="$(curl -fs https://cloudxstorage.blob.core.windows.net/install/Pro/Public)"
          echo "Remote Neos version is: \"$REMOTE_NEOS_VERSION\""
          if [ "$REMOTE_NEOS_VERSION" = "" ]; then
            echo "REMOTE_NEOS_VERSION is empty"
            exit 1
          fi
        shell: bash
      - name: setup workflow cache
        id: cache
        uses: actions/cache@v3
        with:
          path: neos_install/
          key: ${{ env.REMOTE_NEOS_VERSION }}
      - name: setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'
      - name: get cached Neos version
        run: CACHED_NEOS_VERSION="foo"
      - name: install linux packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo apt install -y 7zip
      - name: download Neos
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir neos_install
          cd neos_install
          curl -s "https://assets.neos.com/install/Pro/Data/${{ env.REMOTE_NEOS_VERSION }}.7z" -o neos.7z
          7zz x neos.7z
          rm neos.7z
        shell: bash
      - name: lint
        run: dotnet format --verbosity detailed --verify-no-changes ./NeosModLoader.sln
      - name: build headed
        run: |
          dotnet build ./NeosModLoader.sln --configuration Release "-property:Headless=false;CopyToLibraries=false"
          mv ./NeosModLoader/bin/Release/net462/NeosModLoader.dll ./NeosModLoader.dll
      - name: build headless
        if: github.ref == 'refs/heads/master' # only build headless for master branch builds
        run: |
          dotnet build ./NeosModLoader.sln --configuration Release "-property:Headless=true;CopyToLibraries=false"
          mv ./NeosModLoader/bin/Release/net462/NeosModLoader.dll ./NeosModLoaderHeadless.dll
      - name: upload workflow artifacts
        if: github.ref == 'refs/heads/master' # only publish artifacts for master branch builds
        uses: actions/upload-artifact@v3
        with:
          name: NeosModLoader
          path: |
            ./NeosModLoader.dll
            ./NeosModLoaderHeadless.dll
          if-no-files-found: error
